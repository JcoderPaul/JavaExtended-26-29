******* Класс File. Работа с файлами и каталогами *******

Класс File, определенный в пакете java.io, не работает напрямую с потоками.
Его задачей является управление информацией о файлах и каталогах. Хотя на
уровне операционной системы файлы и каталоги отличаются, но в Java они
описываются одним классом File.
!!! Еще раз и файлы и каталоги описаны одним классам !!!

В зависимости от того, что должен представлять объект File - файл или каталог,
мы можем использовать один из конструкторов для создания объекта:
- File(String путь_к_каталогу)
- File(String путь_к_каталогу, String имя_файла)
- File(File каталог, String имя_файла)
Например:
--------------------------------------------------------------------------------
// создаем объект File для каталога
File dir1 = new File("C://SomeDir");
// создаем объекты для файлов, которые находятся в каталоге
File file1 = new File("C://SomeDir", "Hello.txt");
File file2 = new File(dir1, "Hello2.txt");
--------------------------------------------------------------------------------

Класс File имеет ряд методов, которые позволяют управлять файлами и каталогами.
Рассмотрим некоторые из них:
- boolean createNewFile(): создает новый файл по пути, который передан в конструктор,
                           в случае удачного создания возвращает true, иначе false;

- File createTempFile(String prefix, String suffix, File directory): cоздает «временный файл»,
  файл со случайно сгенерированным уникальным именем – что-типа «dasd4d53sd». Дополнительные
  параметры – префикс к имени, суффикс (окончание). Если директория не указана, то файл создается
  в специальной директории ОС для временных файлов;

- boolean delete(): удаляет каталог или файл по пути, который передан в конструктор,
                    при удачном удалении возвращает true, если объект – директория,
                    то удаляет ее, если в ней нет файлов;

- void deleteOnExit(): добавляет файл в специальный список файлов, которые будут
                       автоматически удалены при закрытии программы;

- boolean exists(): проверяет, существует ли по указанному в конструкторе пути файл
                    или каталог, и если файл или каталог существует, то возвращает
                    true, иначе возвращает false;

- String getAbsolutePath(): возвращает абсолютный путь для пути, переданного в
                            конструктор объекта;

- String getCanonicalPath(): Возвращает канонический путь файла. Например,
                             преобразовывает путь «c:/dir/dir2/../a.txt» к
                             пути «c:/dir/a.txt»;

- String getName(): возвращает краткое имя файла или каталога;
- String getParent(): возвращает имя родительского каталога;

- long getTotalSpace(): возвращает размер диска (количество байт) на котором
                        расположен файл;

- long getFreeSpace(): возвращает количество свободного места (количество байт)
                       на диске, на котором расположен файл;

- boolean isDirectory(): возвращает значение true, если по указанному пути
                         располагается каталог;

- boolean isFile(): возвращает значение true, если по указанному пути находится файл;
- boolean isHidden(): возвращает значение true, если каталог или файл являются скрытыми;
- long length(): возвращает размер файла в байтах;

- long lastModified(): возвращает время последнего изменения файла или каталога,
                       значение представляет количество миллисекунд, прошедших с
                       начала эпохи Unix;

- String[] list(): возвращает массив файлов и подкаталогов, которые находятся в
                   определенном каталоге;

- File[] listFiles(): возвращает массив файлов и подкаталогов, которые находятся
                      в определенном каталоге;

- boolean mkdir(): создает новый каталог и при удачном создании возвращает
                   значение true;

- boolean renameTo(File dest): переименовывает файл или каталог;

- Path toPath(): возвращает объект Path, который соответствует текущему объекту File;

- public boolean setLastModified(long time) - устанавливает последней модификацией время
                                              файла или каталога с именем этого абстрактного
                                              пути. Возвращает true тогда и только тогда,
                                              когда операция выполнена успешно, в противном
                                              случае false;
- public boolean setReadOnly() - помечает файл или каталог с именем абстрактного пути, чтобы
                                 разрешить только операции чтения, возвращает true тогда и
                                 только тогда, когда операция выполнена успешно, в противном
                                 случае false;
